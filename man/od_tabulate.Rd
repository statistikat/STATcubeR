% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/od_tabulate.R
\name{od_tabulate}
\alias{od_tabulate}
\title{Turn od_table objects into tidy data frames}
\usage{
od_tabulate(
  table,
  ...,
  .list = NULL,
  raw = FALSE,
  parse_time = TRUE,
  recode_zeros = FALSE
)
}
\arguments{
\item{table}{An object of class \code{od_table}}

\item{...}{Names of measures and/or fields}

\item{.list}{allows to define the arguments for \code{...} as a character vector}

\item{raw}{If \code{FALSE} (the default), apply labeling to the dataset.
Otherwise, return codes.}

\item{parse_time}{Should time variables be converted into a \code{Date} format?
Ignored if \code{raw} is set to \code{TRUE}.}
}
\description{
\code{od_tabulate()} extracts the data in the table and turns it into a tidy
\code{data.frame}. It is basically a copy of \code{\link[=sc_tabulate]{sc_tabulate()}}.

the \code{...} argument decides which measures and/or fields should be included
in the output. If no measures are given, all measures are included. The same
is true for fields.
}
\details{
Aggregation is done as follows
\itemize{
\item First, all columns that priovide a total code via \code{table$total_codes()}
will be used to filter for \code{column == total_code} or \code{column != toal_code}
\item Then, the remaining data is aggregated using \code{\link[=rowsum]{rowsum()}}
}

The ellipsis (\code{...}) supports partial matching of codes, english labels and
german labels. See Examples
}
\examples{
table <- od_table("OGD_veste309_Veste309_1")

# no arguments -> same output as `table$data`
od_tabulate(table)

# provide some fields -> aggregate to keep only these fields
od_tabulate(table, "Sex", "Citizenship")

# provide some measures -> drop all other measures from the output
od_tabulate(table, "Arithmetic mean")

# mixture of measures and fields  -> keep exactly those columns
od_tabulate(table, "Sex", "Arithmetic mean")

## define total codes
table$total_codes(
  `C-A11-0` = "A11-1",
  `C-STAATS-0` = "STAATS-9",
  `C-VEBDL-0` = "VEBDL-10",
  `C-BESCHV-0` = "BESCHV-1"
)

## alternatively, use partial matching to define totals
table$total_codes(
  Sex = "Sum total",
  Citizenship = "Total",
  Region = "Total",
  `Form of employment` = "Total"
)

# filter for totals in `Region (NUTS2)` and `Form of employment`. Drop totals
# in `Sex` and `Citizenship`.
od_tabulate(table, "Sex", "Citizenship")

## switch language
table$language <- "de"
od_tabulate(table, "Sex", "Citizenship")

## `...` matches for codes, english labels and german labels
od_tabulate(table, "C-A11-0", "Citizenship", "2. Quartil (Median)")

## Keep totals in the output by removing total codes
od_tabulate(table, "C-A11-0")      # -> 2 rows: "male" "female"
table$total_codes(`C-A11-0` = NA)
od_tabulate(table, "C-A11-0")      # -> 3 rows: "total", "male", "female"

## table$tabulate(...) is an alias for sc_tabulate(table, ...)
table$tabulate("C-A11-0")
}
